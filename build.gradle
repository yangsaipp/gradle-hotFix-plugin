apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'com.github'
version = '1.0-SNAPSHOT'

buildscript {
    repositories {
		mavenLocal()
        jcenter()
    }
    dependencies {
		classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1"
    }
}

repositories {
	mavenLocal()
	if(project.hasProperty('comtopReUser')) {
		maven{
			url "http://10.10.50.24:8081/nexus/content/groups/public"
		}
	}
	jcenter()
}

dependencies {
    compile gradleApi()
//	compile localGroovy()
//	compile "org.codehaus.groovy:groovy-all:2.4.3"
	compile 'org.tmatesoft.svnkit:svnkit:1.8.12'
//	testCompile 'junit:junit:4.12'
	testCompile("org.spockframework:spock-core:1.0-groovy-2.4") {
		exclude group: "org.codehaus.groovy"
	}
	testCompile ('com.netflix.nebula:nebula-test:4.0.0') {
		exclude module: 'groovy-all'
	}
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
  classifier "sources"
}

def des = 'Gradle hotFix plugin'
def siteUrl = 'https://github.com/yangsaipp/gradle-hotFix-plugin'
publishing {
	publications {	
		MyPublication(MavenPublication) { // 运行publishToMavenLocal命令
			from components.java
			artifact sourceJar
			pom.withXml {
				def root = asNode()
				root.appendNode('name', des)
				root.appendNode('description', des)
				root.appendNode('url', siteUrl)
				
				//licenses {
				//	license {
				//		name 'The Apache Software License, Version 2.0'
				//		url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
				//	}
				//}
				def license = root.appendNode('licenses').appendNode('license')
				license.appendNode('name', 'The Apache Software License, Version 2.0')
				license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
				
				//developers {
				//	developer {
				//		id 'zhaoyanjun'        //填写开发者的一些基本信息
				//		name 'zhaoyanjun'    //填写开发者的一些基本信息
				//		email '1643915516@qq.com'   //填写开发者的一些基本信息
				//	}
				//}
				def developer = root.appendNode('developers').appendNode('developer')
				developer.appendNode('id', 'yangsai')
				developer.appendNode('name', 'yangsai')
				developer.appendNode('email', 'yangsaipp@qq.com')
				
				//scm {
				//	connection gitUrl
				//	developerConnection gitUrl
				//	url siteUrl
				//}
				
				def scm = root.appendNode('scm')
				scm.appendNode('connection', siteUrl)
				scm.appendNode('developerConnection', siteUrl)
				scm.appendNode('url', siteUrl)
			}
		}
	}
	repositories {	// 运行publish命令
		if(project.hasProperty('comtopReUser')) {
			maven {
				name 'comtopRepository'
				url "http://10.10.50.24:8081/nexus/content/repositories/snapshots"
				credentials {
					username comtopReUser
					password comtopRePass
				}
			}
		}
	}
}

bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	publications = ['MyPublication']
	override = true
	publish = true
//	filesSpec {
//		from 'build/libs'
//		into '.'
//	}
	pkg {
		repo = 'Repo'
		name = 'gradle-hotFix-plugin'
		userOrg = 'yancey-ys'
		desc = 'what a fantastic package indeed!'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/yangsaipp/gradle-hotFix-plugin.git'
		labels = ['hotfix', 'gradle', 'plugin']
		publicDownloadNumbers = true
		githubRepo = 'yangsaipp/gradle-hotFix-plugin' //Optional Github repository
		githubReleaseNotesFile = 'README.md' //Optional Github readme file
//		attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
		version {
			name = project.version
			desc = des
//			vcsTag = '1.0.0'
			//attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
		}
	}
}
